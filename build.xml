<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="scec_vdo_vtk">
	<property environment="env"/>
	<property name="workspace_loc:scec_vdo_vtk/resources/SCECVDOlogo.png" value="resources/SCECVDOlogo.png"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="release" value="11"/>
	<property name="version" value="24.10.0"/>

	<property name="main.class" value="org.scec.vtk.main.MainGUI"/>
	<property name="dist.dir" value="dist"/>
	<property name="jar.file" value="SCEC-VDO.jar"/>
	<property name="jar.output.path" value="${dist.dir}/${jar.file}"/>
	<property name="icon.path" value="resources/SCECVDOlogo.icns"/>

	<property name="macOS.arm.vtklibs.path" value="vtkLibs/macosx_arm"/>
	<property name="macOS.x86.vtklibs.path" value="vtkLibs/macosx_64bit"/>
	<property name="windows.vtklibs.path" value="vtkLibs\windows_64bit"/>
	<property name="linux.vtklibs.path" value="vtkLibs/linux_64bit"/>

	<path id="scec_vdo_vtk.classpath">
		<pathelement location="classes"/>
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<pathconvert property="manifest.classpath" pathsep=" ">
		<path refid="scec_vdo_vtk.classpath"/>
		<mapper>
			<chainedmapper>
				<flattenmapper/>
				<globmapper from="*.jar" to="lib/*.jar"/>
			</chainedmapper>
		</mapper>
	</pathconvert>

	<target name="init">
		<mkdir dir="classes"/>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/PickingTestPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/GISHazusEventsPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/OpenSHAFaultPlugins/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/DummyPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/CommunityFaultModelPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/EarthquakeCatalogPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/SurfacePlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="commons/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/ShakeMapPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="classes">
			<fileset dir="plugins/LegendPlugin/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="classes"/>
		<delete dir="${dist.dir}"/>
	</target>
	<target depends="clean" name="cleanall"/>
	<target depends="build-subprojects,build-project" name="build"/>
	<target name="build-subprojects"/>
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="classes" includeantruntime="true" release="${release}">
		<src path="src"/>
		<src path="plugins/PickingTestPlugin/src"/>
		<src path="plugins/GISHazusEventsPlugin/src"/>
		<src path="plugins/OpenSHAFaultPlugins/src"/>
		<src path="plugins/DummyPlugin/src"/>
		<src path="plugins/CommunityFaultModelPlugin/src"/>
		<src path="plugins/EarthquakeCatalogPlugin/src"/>
		<src path="plugins/SurfacePlugin/src"/>
		<src path="commons/src"/>
		<src path="plugins/ShakeMapPlugin/src"/>
		<src path="plugins/LegendPlugin/src"/>
		<classpath refid="scec_vdo_vtk.classpath"/>
		</javac>
	</target>

	<!-- Execute SCEC-VDO for all platforms without building a jar file -->
	<target name="run-windows" depends="clean, build">
		<java classname="${main.class}" fork="yes" failonerror="true">
			<env key="PATH" value="${env.PATH};${windows.vtklibs.path}"/>
			<jvmarg line="-splash:${workspace_loc:scec_vdo_vtk/resources/SCECVDOlogo.png}"/>
			<classpath refid="scec_vdo_vtk.classpath"/>
		</java>
	</target>
	<target name="run-linux" depends="clean, build">
		<java classname="${main.class}" fork="yes" failonerror="true">
			<env key="LD_LIBRARY_PATH" value="${env.PATH}:${linux.vtklibs.path}"/>
			<jvmarg line="-splash:${workspace_loc:scec_vdo_vtk/resources/SCECVDOlogo.png}"/>
			<classpath refid="scec_vdo_vtk.classpath"/>
		</java>
	</target>
	<target name="run-macOS-arm" depends="clean, build">
		<java classname="${main.class}" fork="yes" failonerror="true">
			<env key="DYLD_LIBRARY_PATH" value="${env.PATH}:${macOS.arm.vtklibs.path}"/>
			<jvmarg line="-splash:${workspace_loc:scec_vdo_vtk/resources/SCECVDOlogo.png}"/>
			<classpath refid="scec_vdo_vtk.classpath"/>
		</java>
	</target>
	<target name="run-macOS-x86" depends="clean, build">
		<java classname="${main.class}" fork="yes" failonerror="true">
			<env key="DYLD_LIBRARY_PATH" value="${env.PATH}:${macOS.x86.vtklibs.path}"/>
			<jvmarg line="-splash:${workspace_loc:scec_vdo_vtk/resources/SCECVDOlogo.png}"/>
			<classpath refid="scec_vdo_vtk.classpath"/>
		</java>
	</target>

	<!-- Create a JAR and copy resources for packaging -->
	<target name="create-jar" depends="clean, build">
		<!-- Copy resources and libs -->
		<mkdir dir="${dist.dir}"/>
		<copy todir="${dist.dir}/lib">
			<fileset dir="lib"/>
		</copy>
		<copy todir="${dist.dir}/resources">
			<fileset dir="resources"/>
		</copy>
		<copy todir="${dist.dir}/data">
			<fileset dir="data"/>
		</copy>
		<copy todir="${dist.dir}/conf">
			<fileset dir="conf"/>
		</copy>
		<copy todir="${dist.dir}/plugins">
			<fileset dir="plugins"/>
		</copy>
		<!-- Create the JAR with bundled class files -->
		<jar destfile="${jar.output.path}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
			</manifest>
			<fileset dir="classes"/>
		</jar>
	</target>
	<target name="build-windows" depends="create-jar">
		<copy todir="${dist.dir}\${windows.vtklibs.path}">
			<fileset dir="${windows.vtklibs.path}"/>
		</copy>
	</target>
	<target name="build-linux" depends="create-jar">
		<copy todir="${dist.dir}/${linux.vtklibs.path}">
			<fileset dir="${linux.vtklibs.path}"/>
		</copy>
	</target>
	<target name="build-macOS-x86" depends="create-jar">
		<copy todir="${dist.dir}/${macOS.x86.vtklibs.path}">
			<fileset dir="${macOS.x86.vtklibs.path}"/>
		</copy>
	</target>
	<target name="build-macOS-arm" depends="create-jar">
		<copy todir="${dist.dir}/${macOS.arm.vtklibs.path}">
			<fileset dir="${macOS.arm.vtklibs.path}"/>
		</copy>
	</target>
</project>
